/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/css/fonts.css":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://book-shop-ready/./src/css/fonts.css?")},"./src/css/style.css":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://book-shop-ready/./src/css/style.css?")},"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/style.css */ "./src/css/style.css");\n/* harmony import */ var _css_fonts_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css/fonts.css */ "./src/css/fonts.css");\n/* harmony import */ var _js_gBooksAPI_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/gBooksAPI.js */ "./src/js/gBooksAPI.js");\n/* harmony import */ var _js_slider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/slider.js */ "./src/js/slider.js");\n\r\n\r\n\r\n\r\n\r\n\r\nconst apiKey = \'AIzaSyB-vbVev6We9_c4mfA1i70iGPsYlag8Hok\';\r\nconst bookFetcher = new _js_gBooksAPI_js__WEBPACK_IMPORTED_MODULE_2__["default"](apiKey);\r\n\r\nconst slider = new _js_slider_js__WEBPACK_IMPORTED_MODULE_3__["default"](\'.banner__wrapper\', \'.bullit\', 5000);\n\n//# sourceURL=webpack://book-shop-ready/./src/index.js?')},"./src/js/cartManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CartManager)\n/* harmony export */ });\nclass CartManager {\r\n\tconstructor() {\r\n\t\tthis.init(); // Инициализируем cartManager сразу при создании\r\n\t}\r\n\r\n\tinit() {\r\n\t\t// Обновляем список кнопок \"Buy now\"\r\n\t\tthis.cartButtons = Array.from(document.querySelectorAll('#books .item button'));\r\n\t\tif (this.cartButtons.length === 0) {\r\n\t\t\tconsole.error('No \"Buy now\" buttons found. Check your selectors.');\r\n\t\t} else {\r\n\t\t\tconsole.log(`Found ${this.cartButtons.length} \"Buy now\" buttons.`);\r\n\t\t}\r\n\r\n\t\t// Получаем список товаров из localStorage\r\n\t\tconst items = this.getItemsFromLocalStorage();\r\n\t\tconsole.log('Items from localStorage:', items);\r\n\r\n\t\t// Обновляем текст кнопок, если товар уже есть в корзине\r\n\t\titems.forEach(item => {\r\n\t\t\tconst button = document.getElementById(item.id);\r\n\t\t\tif (button) {\r\n\t\t\t\tbutton.textContent = 'In the cart';\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(`Button with ID ${item.id} not found.`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Устанавливаем content в псевдоклассе ::before кнопки #cart\r\n\t\tthis.updateCartCounter();\r\n\r\n\t\t// Добавляем обработчики событий для всех кнопок \"Buy now\"\r\n\t\tthis.cartButtons.forEach(button => {\r\n\t\t\tconst itemElement = button.closest('.item');\r\n\t\t\tif (!itemElement) {\r\n\t\t\t\tconsole.error('Item element not found for button:', button);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst itemId = button.id;\r\n\t\t\tconst author = itemElement.querySelector('.item__author').textContent;\r\n\t\t\tconst title = itemElement.querySelector('.item__title').textContent;\r\n\r\n\t\t\tif (!itemId || !author || !title) {\r\n\t\t\t\tconsole.error('Missing data for button:', button);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.addItemButtonListener(button, itemId, author, title);\r\n\t\t});\r\n\t}\r\n\r\n\tgetItemsFromLocalStorage() {\r\n\t\t// Получаем товары из localStorage или возвращаем пустой массив, если таких товаров нет\r\n\t\ttry {\r\n\t\t\tconst items = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n\t\t\treturn items;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error parsing localStorage data:', error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tsaveItemsToLocalStorage(items) {\r\n\t\t// Сохраняем обновленный список товаров в localStorage\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem('cartItems', JSON.stringify(items));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error saving items to localStorage:', error);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateCartCounter() {\r\n\t\t// Обновляем счетчик товаров в корзине на кнопке \"Cart\"\r\n\t\tconst items = this.getItemsFromLocalStorage();\r\n\t\tconst itemCount = items.length;\r\n\r\n\t\tconsole.log(`Updating cart counter. Items in cart: ${itemCount}`);\r\n\r\n\t\tconst cartButton = document.getElementById('cart');\r\n\t\tif (cartButton) {\r\n\t\t\tcartButton.style.setProperty('--cart-item-count', `\"${itemCount}\"`);\r\n\t\t\t// Изменяем видимость псевдоэлемента ::before в зависимости от itemCount\r\n\t\t\tif (itemCount > 0) {\r\n\t\t\t\tcartButton.style.setProperty('--cart-before-visibility', 'visible');\r\n\t\t\t} else {\r\n\t\t\t\tcartButton.style.setProperty('--cart-before-visibility', 'hidden');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.error('Cart button with ID \"cart\" not found.');\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleItemInCart(button, itemId, author, title) {\r\n\t\t// Получаем текущий список товаров\r\n\t\tconst items = this.getItemsFromLocalStorage();\r\n\t\tconsole.log('items before toggle:', items);\r\n\r\n\t\t// Проверяем, есть ли товар в корзине\r\n\t\tconst itemIndex = items.findIndex(item => item.id === itemId);\r\n\r\n\t\tif (itemIndex === -1) {\r\n\t\t\t// Если товара нет, добавляем его в корзину\r\n\t\t\titems.push({ id: itemId, author, title });\r\n\t\t\tbutton.textContent = 'In the cart';\r\n\t\t} else {\r\n\t\t\t// Если товар уже в корзине, удаляем его\r\n\t\t\titems.splice(itemIndex, 1);\r\n\t\t\tbutton.textContent = 'Buy now';\r\n\t\t}\r\n\r\n\t\t// Сохраняем обновленный список в localStorage и обновляем счетчик\r\n\t\tthis.saveItemsToLocalStorage(items);\r\n\t\tthis.updateCartCounter();\r\n\r\n\t\tconsole.log('items after toggle:', items); // Проверка работы toggle\r\n\t}\r\n\r\n\taddItemButtonListener(button, itemId, author, title) {\r\n\t\t// Добавляем обработчик событий на кнопку \"Buy now\"\r\n\t\tbutton.addEventListener('click', () => {\r\n\t\t\tconsole.log(`Button clicked: ${itemId}`);\r\n\t\t\tthis.toggleItemInCart(button, itemId, author, title);\r\n\t\t});\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://book-shop-ready/./src/js/cartManager.js?")},"./src/js/gBooksAPI.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BookFetcher)\n/* harmony export */ });\n/* harmony import */ var _cartManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartManager.js */ \"./src/js/cartManager.js\");\n\r\n\r\nclass BookFetcher {\r\n\tconstructor(APIKey, startIndex = 0, maxResults = 6) {\r\n\t\tthis.APIKey = APIKey;\r\n\t\tthis.startIndex = startIndex;\r\n\t\tthis.maxResults = maxResults;\r\n\t\tthis.navContainer = document.querySelector('.conteiner__navigation ul');\r\n\t\tthis.booksContainer = document.querySelector('#books');\r\n\t\tthis.loadMoreButton = document.querySelector('#load-more');\r\n\t\t\r\n\t\tthis.cartManager = null; // Начальная инициализация cartManager\r\n\t\t\r\n\t\tthis.fetchInit();\r\n\t\tthis.fetchFirstBook();\r\n\t\tthis.LoadMore();\r\n\t}\r\n\r\n\tfetchInit() {\r\n\t\tthis.navContainer.addEventListener('click', (event) => {\r\n\t\t\tif (event.target.tagName === 'LI') {\r\n\t\t\t\tconsole.log('CLICK');\r\n\t\t\t\tthis.setActiveClass(event.target);\r\n\t\t\t\tconst url = event.target.getAttribute('data-url');\r\n\t\t\t\tthis.startIndex = 0; // Сбрасываем startIndex при выборе новой категории\r\n\t\t\t\tthis.fetchBooks(url);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetActiveClass(clickedElement) {\r\n\t\tconst activeElement = this.navContainer.querySelector('li.active');\r\n\t\tif (activeElement) {\r\n\t\t\tactiveElement.classList.remove('active');\r\n\t\t}\r\n\t\tclickedElement.classList.add('active');\r\n\t}\r\n\r\n\tasync fetchBooks(subject) {\r\n\t\tconsole.log('this.startIndex', this.startIndex);\r\n\t\tconst url = `https://www.googleapis.com/books/v1/volumes?q=\"subject:${subject}\"&key=${this.APIKey}&printType=books&startIndex=${this.startIndex}&maxResults=${this.maxResults}&langRestrict=en`;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (!data.items || data.items.length === 0) {\r\n\t\t\t\tconsole.log('No books found');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.displayBooks(data);\r\n\t\t\tthis.startIndex += this.maxResults; // Увеличиваем startIndex для следующего запроса\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching books:', error);\r\n\t\t}\r\n\t}\r\n\r\n\tdisplayBooks(data) {\r\n\t\tif (this.startIndex === 0) {\r\n\t\t\tthis.booksContainer.innerHTML = ''; // Очищаем контейнер только при первом запросе\r\n\t\t}\r\n\t\tdata.items.forEach(item => {\r\n\t\t\tconst bookElement = document.createElement('div');\r\n\t\t\tbookElement.classList.add('item');\r\n\r\n\t\t\t// Создаем элементы и добавляем их в bookElement...\r\n\t\t\tconst imageElement = document.createElement('div');\r\n\t\t\timageElement.classList.add('item__image');\r\n\t\t\tconst img = document.createElement('img');\r\n\t\t\timg.src = item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : './images/placeholder.png';\r\n\t\t\timageElement.appendChild(img);\r\n\r\n\t\t\tconst infoElement = document.createElement('div');\r\n\t\t\tinfoElement.classList.add('item__info');\r\n\r\n\t\t\tconst authorElement = document.createElement('p');\r\n\t\t\tauthorElement.classList.add('item__author');\r\n\t\t\tauthorElement.textContent = item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : 'Unknown Author';\r\n\r\n\t\t\tconst titleElement = document.createElement('h3');\r\n\t\t\ttitleElement.classList.add('item__title');\r\n\t\t\ttitleElement.textContent = item.volumeInfo.title;\r\n\r\n\t\t\t// Создаем контейнер для рейтинга\r\n\t\t\tconst ratingContainer = document.createElement('div');\r\n\t\t\tratingContainer.classList.add('item__rating');\r\n\r\n\t\t\t// Создаем элемент для звезд\r\n\t\t\tconst starsElement = document.createElement('span');\r\n\t\t\tstarsElement.classList.add('item__rating__stars');\r\n\r\n\t\t\t// Создаем элемент для количества оценок\r\n\t\t\tconst countElement = document.createElement('span');\r\n\t\t\tcountElement.classList.add('item__rating__count');\r\n\t\t\tconst ratingsCount = item.volumeInfo.ratingsCount || 0;\r\n\t\t\tcountElement.textContent = ratingsCount + (ratingsCount === 1 ? ' review' : ' reviews');\r\n\r\n\t\t\t// Получаем рейтинг\r\n\t\t\tconst rating = item.volumeInfo.averageRating || 0;\r\n\t\t\tconst fullStars = Math.floor(rating); // Полные звезды\r\n\t\t\tconst halfStar = rating % 1 >= 0.5 ? 1 : 0; // Половинчатая звезда\r\n\t\t\tconst emptyStars = 5 - fullStars - halfStar; // Пустые звезды\r\n\r\n\t\t\t// Добавляем полные звезды\r\n\t\t\tfor (let i = 0; i < fullStars; i++) {\r\n\t\t\t\tconst star = document.createElement('span');\r\n\t\t\t\tstar.classList.add('star', 'star-full');\r\n\t\t\t\tstarsElement.appendChild(star);\r\n\t\t\t}\r\n\r\n\t\t\t// Добавляем половинчатую звезду\r\n\t\t\tif (halfStar) {\r\n\t\t\t\tconst star = document.createElement('span');\r\n\t\t\t\tstar.classList.add('star', 'star-half');\r\n\t\t\t\tstarsElement.appendChild(star);\r\n\t\t\t}\r\n\r\n\t\t\t// Добавляем пустые звезды\r\n\t\t\tfor (let i = 0; i < emptyStars; i++) {\r\n\t\t\t\tconst star = document.createElement('span');\r\n\t\t\t\tstar.classList.add('star', 'star-empty');\r\n\t\t\t\tstarsElement.appendChild(star);\r\n\t\t\t}\r\n\r\n\t\t\tconst descriptionElement = document.createElement('p');\r\n\t\t\tdescriptionElement.classList.add('item__description');\r\n\t\t\tdescriptionElement.textContent = item.volumeInfo.description || 'No description available';\r\n\r\n\t\t\tconst priceElement = document.createElement('p');\r\n\t\t\tpriceElement.classList.add('item__price');\r\n\t\t\tif (item.saleInfo && item.saleInfo.retailPrice) {\r\n\t\t\t\tpriceElement.textContent = item.saleInfo.retailPrice.amount + ' ' + item.saleInfo.retailPrice.currencyCode;\r\n\t\t\t} else {\r\n\t\t\t\tpriceElement.textContent = 'Price not available';\r\n\t\t\t}\r\n\r\n\t\t\tconst button = document.createElement('button');\r\n\t\t\tbutton.id = item.id;\r\n\t\t\tbutton.textContent = 'Buy now';\r\n\r\n\t\t\tinfoElement.appendChild(authorElement);\r\n\t\t\tinfoElement.appendChild(titleElement);\r\n\t\t\t\r\n\t\t\tratingContainer.appendChild(starsElement);\r\n\t\t\tratingContainer.appendChild(countElement);\r\n\r\n\t\t\tinfoElement.appendChild(ratingContainer);\r\n\t\t\t\r\n\t\t\tinfoElement.appendChild(descriptionElement);\r\n\t\t\tinfoElement.appendChild(priceElement);\r\n\t\t\tinfoElement.appendChild(button);\r\n\r\n\t\t\tbookElement.appendChild(imageElement);\r\n\t\t\tbookElement.appendChild(infoElement);\r\n\r\n\t\t\tthis.booksContainer.appendChild(bookElement);\r\n\t\t});\r\n\r\n\t\t// После добавления книг на страницу, создаем/инициализируем CartManager\r\n\t\tthis.initializeCartManager();\r\n\t}\r\n\r\n\tinitializeCartManager() {\r\n\t\tif (!this.cartManager) {\r\n\t\t\tthis.cartManager = new _cartManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](); // Создаем экземпляр CartManager\r\n\t\t} else {\r\n\t\t\tthis.cartManager.init(); // Повторно инициализируем, если экземпляр уже существует\r\n\t\t}\r\n\t}\r\n\r\n\tfetchFirstBook() {\r\n\t\tconst firstLi = this.navContainer.querySelector('li');\r\n\t\tif (firstLi) {\r\n\t\t\tconst url = firstLi.getAttribute('data-url');\r\n\t\t\tthis.fetchBooks(url);\r\n\t\t\tthis.setActiveClass(firstLi);\r\n\t\t}\r\n\t}\r\n\r\n\tLoadMore() {\r\n\t\tthis.loadMoreButton.addEventListener('click', () => {\r\n\t\t\tconst activeElement = this.navContainer.querySelector('li.active');\r\n\t\t\tif (activeElement) {\r\n\t\t\t\tconst subject = activeElement.getAttribute('data-url');\r\n\t\t\t\tthis.fetchBooks(subject);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://book-shop-ready/./src/js/gBooksAPI.js?")},"./src/js/slider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Slider)\n/* harmony export */ });\nclass Slider {\r\n\tconstructor(sliderSelector, bulletSelector, interval) {\r\n\t\tthis.slides = document.querySelectorAll(sliderSelector);\r\n\t\tthis.bullets = document.querySelectorAll(bulletSelector);\r\n\t\tthis.currentSlide = 0;\r\n\t\tthis.interval = interval;\r\n\t\tthis.autoSlideInterval = null;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.slides.forEach((slide, index) => {\r\n\t\t\tif (index !== this.currentSlide) {\r\n\t\t\t\tslide.classList.add('hidden');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.bullets.forEach((bullet, index) => {\r\n\t\t\tbullet.addEventListener('click', () => {\r\n\t\t\t\tthis.stopAutoSlide(); // Останавливаем автоматическое пролистывание\r\n\t\t\t\tthis.showSlide(index); // Показываем выбранный слайд\r\n\t\t\t\tthis.startAutoSlide(); // Возобновляем автоматическое пролистывание\r\n\t\t\t});\r\n\t\t});\r\n\t\r\n\tthis.bullets[this.currentSlide].classList.add('active');\r\n\t\r\n\t\tthis.startAutoSlide();\r\n\t}\r\n\r\n\tshowSlide(index) {\r\n\t\tif (index === this.currentSlide) return;\r\n\r\n\t\tthis.slides[this.currentSlide].classList.add('hidden');\r\n\t\tthis.slides[index].classList.remove('hidden');\r\n\r\n\t\tthis.bullets[this.currentSlide].classList.remove('active');\r\n\t\tthis.bullets[index].classList.add('active');\r\n\r\n\t\tthis.currentSlide = index;\r\n\t}\r\n\r\n\tstartAutoSlide() {\r\n\t\tthis.autoSlideInterval = setInterval(() => {\r\n\t\t\tlet nextSlide = (this.currentSlide + 1) % this.slides.length;\r\n\t\t\tthis.showSlide(nextSlide);\r\n\t\t}, this.interval);\r\n\t}\r\n\r\n\tstopAutoSlide() {\r\n\t\tif (this.autoSlideInterval) {\r\n\t\t\tclearInterval(this.autoSlideInterval);\r\n\t\t\tthis.autoSlideInterval = null;\r\n\t\t}\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://book-shop-ready/./src/js/slider.js?")}},__webpack_module_cache__={};function __webpack_require__(t){var e=__webpack_module_cache__[t];if(void 0!==e)return e.exports;var r=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t](r,r.exports,__webpack_require__),r.exports}__webpack_require__.d=(t,e)=>{for(var r in e)__webpack_require__.o(e,r)&&!__webpack_require__.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},__webpack_require__.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),__webpack_require__.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js")})();